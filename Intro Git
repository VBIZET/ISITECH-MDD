# Modelisation de donnes

## Utilisation GIT

- Initialisation d'un depot Git :

``` sh
git init
```

- Consulter l'etat du depot Git :

``` sh
git status
```

- Pour ajouter les fichiers non suivis :

``` sh
git add .
```

- Sauvegarder le travail :  

``` sh
git commit -m "votre message du commit"
```

## Merise

- Methode de modelisation de donnes 

- Acronyme : Methode d'Etude et de Realisation Informatique pour les Systemes d'Entreprise

- Representer par 3 points :
    - une approche dite systemique : on transforme les porcessus de l'entreprise en systeme d'information
    - une separation des donnees et des traitements
    - une approche nivelee

### L'approche systemique

![Alt text](image-1.png)

    - Le systeme de pilotage :
        **piloter** le SI

    - Le systeme d'information :
        **utiliser** le SI

    - Le systeme operant :
        **produire** les donnees du SI

### Separation des donnees et des traitements

3 etapes :

- l'analyse des flux (identifier)
- l'etude des documents internes (factures, bon de livraison, ...)
- l'etude des documents externes (fournisseurs, clients, ...)

Les differents types dinformation :

- les infos de bases ou elementaires : ce sont les donnees de base du systeme d'information
- les infos calculees : ce sont les donnees calculees a partir des donnees de base
- les traitements ou les fonctions : ce sont les traitements effectues sur les donnees de base pour obtenir les donnees calculees

En resume : vous devrez identifier les donnees et les traitements effectues sur ces donnees

### L'approche nivelee

4 niveaux :
    
- le niveau conceptuel
- le niveau organisationnel
- le niveau logique
- le niveau physique

#### Le niveau conceptuel

Modeliser les donnees de l'entreprise en utilisant un MCD (Modele de Conception de Donnees) et modeliser les traitements effectues sur ces donnees en utilsant un MCT

#### Le niveau organisationnel

Integrer a l'analyse precedente toutes les notions de temporalite, de chronologie des operations, de crontaintes geographique, ... en utilisant le modele organisationnel des donnees (MOD) = modeliser les traitements

En resume : on se pose les questions suivantes :
- **Quand** les traitements sont-ils effectues ?
- **Ou** les traitements sont-ils effectues ?
- par **qui** les traitements sont-ils effectues ?

#### Le niveau logique

Modeliser les donnees en utilsant le modele logique de donnees (MLD) et les traitements avec le modele logique des traitements (MLT)

Le mLD est independant des langues de programmation et des SGBD (Systeme de Gestion de Base de Donnees)

On repond a la question : **Avec quoi** les traitements sont-ils effectues ?

#### Le niveau physique

Organisation `reelle` des donnees en utilisant le modele physique de donnees (MPD) et le modele physique des traitements (MPT)

Ici, on apporte les solutions techniques de stockage des donnees et de traitement des donnees

On repond a la question : **Comment** les traitements sont-ils effectues ?

#### Resume : les 4 niveaux de Merise

![Alt text](image.png)

### Des donnees aux dependance fonctionnelles

Pour etre integrees dans un systeme d'info, les donnees doivent etre triees et organisees. On va souvent les classer par type de donnees :

- chaines de caracteres, format texte
- type alphanumerique, format texte
- le type numerique (integer, float, ...)
- le type date (date, datetime, timestamp)
- le logique ou booleen (true, false)

<br>
Creation d'un dictionnaire de donnees :

![Alt text](image-2.png)

### Les dependances fonctionnelles

Intervention sur 2 attributs

Exemple: une donnee A depend fonctionnellemetn d'une donnee B si la valeur de B determine la valeur de A

Pour finaliser une dependance fonctionnelle on utilise la notation suivante:
`Numero adherent (nom, prenom,code postal, ville, telephone, date d'adhesion, mail)`

La partie gauche (numero adherent) est la `source` de la dependance fonctionnelle.
La partie droite designe le `but` de la dependance


### Les dependances fonctionnelles composees

Intervention sur plusieurs attributs

Exemple: pour connaitre le temps d'un coureur sur une etape donnee il nous faut son numero ou son nom ainsi que le nom ou le numero de l'etape

Formalisation :
`(numero coureur, numero etape) (temps)`

### Les dependances fonctionnelles elementaires

Une dependance fonctionnelle A -> B est elementaire s'il existe pas  une donne C, sous-ensemble de A, decrivant une dependance fonctionnelle type C -> B

Exemple: 
- RefProduit -> LibelleProduit
- NumCommande RefProduit -> QuantiteCommande
- <strike>NumCommande RefProduit -> DesignationProduit</strike>

### Les dependance fonctionnelle elementaire directe

On dit que la dependance fonctionnelle A -> B est directe s'il n'existe aucun attribut C tel l'on puisse avec A -> C et C -> B

Cela signifie que la depandance fonctionnelle entre A et B ne peut pas etre obtenue par transitivite

Exemple :
- RefPromo -> NumApprenant
- NumApprenant -> NomApprenant
- RefPromo -> NomApprenant : RefPromo -> NumApprenant -> NomApprenant

#### Sujet TP/TD MCD jour 1 : 

![Alt text](image-11.png)
![Alt text](image-4.png)
![Alt text](image-5.png)
![Alt text](image-6.png)

- lancer AnalyseSI : 

``` sh
cd Downloads
java -jar AnalyseSI-0.80.jar
```

- Le but de l'exercice est d'elaborer un MCD a partir d'un dictionnaire de donnees

    - Ici on va introduire les notions d'entite, de relation et de proprietes

### Les proprietes sont les infos de bases d'un SI

#### Les entites sont les objets du SI

![Alt text](image-8.png)

Quelque definitions :
   - entite forte : une entite qui depend pas d'une autre entite pour exister
   - entite faible : une entite qui depend d'une autre entite pour exister 

#### Les relations

![Alt text](image-9.png)

#### **Les cardinalites** : elles permettent de definir le nombre d'occurence d'une entite par rapport a une autre entite

![Alt text](image-10.png)

#### Les relations "porteuses"

Une relation est dite porteuse si elle possede des proprietes

#### Les relations "reflexives"

Une relation est dite reflexive si elle relie une entite a elle meme

#### Quelques regles de conception :

- toute entite doit avoir un identifiant
- toutes les proprietes dependent fonctionnellement de l'identifiant
- le nom d'une propriete ne doit apparaitre qu'une seule fois dans le MCD : si vous avez une entite Eleve et une entite Professeur, vous ne pouvez pas avoir une propriete nom dans les deux entite. Il faut donc renommer la propriete nom de l'entite Professeur en nomProfesseur par exemple
- les propriete issues d'un calcul ne doivent pas apparaitre dans le MCD

##### Les contraintes d'integrite fonctionnelle (CIF)

Definitions : une CIF est definie par le fait qu'une des entites de l'association est completement determinee par la connaissance d'une ou de plusieurs entites participant a l'association

Exemple :


Une salle peut contenir 0 ou plusieurs ordinateurs. Un ordinateur existe dans une et une seule salle. Dans ce type de relation une CIF existe si on a une cardinalite 1,1





